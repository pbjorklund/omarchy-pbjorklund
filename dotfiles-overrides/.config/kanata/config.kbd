(defcfg
  process-unmapped-keys yes
  concurrent-tap-hold yes
)

(defvar
  tap-time 150
  hold-time 200
  chord-s 30
)

(defsrc
  esc
  u i o [ 
  caps a s d f j k l ' ; enter
  lsft n m , . rshft
  lctrl lmet lalt spc ralt rmet menu rctl
)

;; unset esc
;; unset shift
;; unset ctrl
;; unset lalt
;; unset super
;; unset menu
;; remap ralt to enter
(deflayer base
  XX
  u i o [
  @escctrl @a @s @d @f @j @k @l ' @; XX
  XX n m , . XX
  caps XX XX @spc-l2 enter XX XX XX
)

;;   u i o -   7 8 9
;;   j k l -   4 5 6
;; n m , . - 0 1 2 3

(deflayer l2
  _
  7 8 9 @aa
  _ _ _ _ _ 4 5 6 @oo @ae XX
  XX 0 1 2 3 XX
  XX XX XX _ _ XX XX XX
)

(defalias
  spc-l2 (tap-hold 250 300 spc (layer-while-held l2))
  aa (fork (cmd wtype å) (cmd wtype Å) (lsft rsft))
  oo (fork (cmd wtype ö) (cmd wtype Ö) (lsft rsft))
  ae (fork (cmd wtype ä) (cmd wtype Ä) (lsft rsft))
  
  escctrl (tap-hold $tap-time $hold-time esc lctl)
  a (multi f24 (tap-hold $tap-time $hold-time a lmet))
  s (multi f24 (tap-hold $tap-time $hold-time s lalt))
  d (multi f24 (tap-hold $tap-time $hold-time d lsft))
  f (multi f24 (tap-hold $tap-time $hold-time f lctl))
  j (multi f24 (tap-hold $tap-time $hold-time j rctl))
  k (multi f24 (tap-hold $tap-time $hold-time k rsft))
  l (multi f24 (tap-hold $tap-time $hold-time l ralt))
  ; (multi f24 (tap-hold $tap-time $hold-time ; rmet))
)
(defchordsv2
  (f j) enter $chord-s all-released ()
  (d k) bspc $chord-s all-released ()
)


;;a = super
;;s = alt
;;d = shift
;;f = ctrl
;;j = ctrl
;;k = shift
;;l = alt
;;; = super
